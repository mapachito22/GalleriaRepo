@page "/perfilDetails"
@inject UsuarioService usuarioService
@inject NavigationManager NavigationManager

<h2>Perfil</h2>
<EditForm Model="@entity" autocomplete="off">
    <div style="position: fixed; top: 100%">
        <input type="text" />
        <input type="password" />
    </div>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="uname" class="control-label">Usuario:</label>
                <input id="uname" required class="form-control" @bind="entity.UserName" />
            </div>
            <div class="form-group">
                <label for="Nombre" class="control-label">Nombre:</label>
                <input id="Nombre" class="form-control" @bind="entity.Nombre" />
            </div>
            <div class="form-group">
                <label for="Ap_Paterno" class="control-label">Apellido Paterno:</label>
                <input id="Ap_Paterno" class="form-control" @bind="entity.Ap_Paterno" />
            </div>
            <div class="form-group">
                <label for="Ap_Materno" class="control-label">Apellido Materno:</label>
                <input id="Ap_Materno" class="form-control" @bind="entity.Ap_Materno" />
            </div>
            <div class="form-group">
                <label for="pass" class="control-label">Contraseña:</label>
                <input id="pass" type="password" class="form-control" @bind="entity.pass" />
            </div>
            <div class="form-group">
                <label for="confPass" class="control-label">Confirmar contraseña:</label>
                <input id="confPass" type="password" class="form-control" @bind="entity.confPass" />
            </div>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(message))
    {
        if (error)
        {
            <div class="alert alert-danger" role="alert">
                @message
            </div>
        }
        else
        {
            <div class="alert-success" role="alert">
                @message
            </div>
        }

    }
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input class="btn btn-danger" type="button" value="Cancel" @onclick="@Cancel" />
                <input class="btn btn-success" type="submit" value="Save" @onclick="@SaveUsuario" />
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string id { get; set; }
    private Usuario entity = new Usuario();
    private string message { get; set; }
    bool error = true;
    bool nuevo = true;

    protected async Task SaveUsuario()
    {
        message = null;
        if ((entity.pass ?? "").Length < 6 || (entity.confPass ?? "").Length < 6)
            message = "La contraseña debe tener al menos 6 dígitos";
        else if (entity.pass != entity.confPass)
            message = "Las contraseñas no coinciden";
        else if (string.IsNullOrEmpty(entity.UserName))
            message = "El nombre de usuario es obligatorio";

        if (string.IsNullOrEmpty(message))
        {

            nuevo = false;
            if (await usuarioService.UpdateCurrent(entity))
            {
                error = false;
                message = "Usuario actualizado correctamente";
                entity = new Usuario();
                nuevo = false;
                NavigationManager.NavigateTo("");
            }
        }
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("UsuariosList");
    }

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            var returnUrl =
                NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            NavigationManager.NavigateTo($"/identity/account/login?returnUrl={"~/" + returnUrl}");
        }
        else
        {
            entity = await usuarioService.GetByName(user.Identity.Name);
            entity.pass = "";
            entity.confPass = "";
        }
    }

}

